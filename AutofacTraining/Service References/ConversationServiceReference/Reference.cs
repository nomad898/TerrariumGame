//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutofacTraining.ConversationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConversationDataContract", Namespace="http://schemas.datacontract.org/2004/07/TerrariumGame.WcfServiceApp.DataMembers")]
    [System.SerializableAttribute()]
    public partial class ConversationDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConversationServiceReference.IConversationWcfService")]
    public interface IConversationWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversationWcfService/Get", ReplyAction="http://tempuri.org/IConversationWcfService/GetResponse")]
        AutofacTraining.ConversationServiceReference.ConversationDataContract[] Get();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversationWcfService/Get", ReplyAction="http://tempuri.org/IConversationWcfService/GetResponse")]
        System.Threading.Tasks.Task<AutofacTraining.ConversationServiceReference.ConversationDataContract[]> GetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversationWcfService/Create", ReplyAction="http://tempuri.org/IConversationWcfService/CreateResponse")]
        void Create(AutofacTraining.ConversationServiceReference.ConversationDataContract conversation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversationWcfService/Create", ReplyAction="http://tempuri.org/IConversationWcfService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(AutofacTraining.ConversationServiceReference.ConversationDataContract conversation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversationWcfService/CreateConversation", ReplyAction="http://tempuri.org/IConversationWcfService/CreateConversationResponse")]
        void CreateConversation(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConversationWcfService/CreateConversation", ReplyAction="http://tempuri.org/IConversationWcfService/CreateConversationResponse")]
        System.Threading.Tasks.Task CreateConversationAsync(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConversationWcfServiceChannel : AutofacTraining.ConversationServiceReference.IConversationWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConversationWcfServiceClient : System.ServiceModel.ClientBase<AutofacTraining.ConversationServiceReference.IConversationWcfService>, AutofacTraining.ConversationServiceReference.IConversationWcfService {
        
        public ConversationWcfServiceClient() {
        }
        
        public ConversationWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConversationWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversationWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConversationWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AutofacTraining.ConversationServiceReference.ConversationDataContract[] Get() {
            return base.Channel.Get();
        }
        
        public System.Threading.Tasks.Task<AutofacTraining.ConversationServiceReference.ConversationDataContract[]> GetAsync() {
            return base.Channel.GetAsync();
        }
        
        public void Create(AutofacTraining.ConversationServiceReference.ConversationDataContract conversation) {
            base.Channel.Create(conversation);
        }
        
        public System.Threading.Tasks.Task CreateAsync(AutofacTraining.ConversationServiceReference.ConversationDataContract conversation) {
            return base.Channel.CreateAsync(conversation);
        }
        
        public void CreateConversation(string message) {
            base.Channel.CreateConversation(message);
        }
        
        public System.Threading.Tasks.Task CreateConversationAsync(string message) {
            return base.Channel.CreateConversationAsync(message);
        }
    }
}
